#spring.application.name=ecomm-app
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql = true // This will allow us to see what sql query is used behind the sense to do the job
#spring.jpa.hibernate.ddl-auto = create // Whenever the app started this will convert all the entity into table
#management.endpoints.web.exposure.include=*

spring:
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: userdb

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:guest}
    connection-timeout: 30000

server:
  port: 8082

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true


logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 7

# KEYCLOAK

keycloak:
  admin:
    username: user
    password: user
    server_url: http://localhost:8431
    realm: ecomm-app
    client_id: admin-cli
    client_uuid: 74d31cf4-5808-43de-93e0-01a079063245
